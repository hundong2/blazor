:root {
    --editor-bg-light: #ffffff;
    --editor-text-light: #222222;
    --node-bg-light: #f0f0f0;
    --node-border-light: #cccccc;
    --key-color-light: #0050b3; /* Dark blue for keys */
    --string-color-light: #008000; /* Green for strings */
    --number-color-light: #ff0000; /* Red for numbers */
    --boolean-color-light: #ff8c00; /* Orange for booleans */
    --null-color-light: #800080; /* Purple for null */
    --input-bg-light: #ffffff;
    --input-text-light: #000000;
    --input-border-light: #cccccc;
    --button-bg-light: #e0e0e0;
    --button-text-light: #000000;


    --editor-bg-dark: #2d2d2d;
    --editor-text-dark: #f0f0f0;
    --node-bg-dark: #3c3c3c;
    --node-border-dark: #555555;
    --key-color-dark: #9cdcfe; /* Light blue for keys */
    --string-color-dark: #b5cea8; /* Light green for strings */
    --number-color-dark: #ce9178; /* Light red/brown for numbers */
    --boolean-color-dark: #d8a0df; /* Light purple for booleans */
    --null-color-dark: #569cd6; /* Another shade of blue for null */
    --input-bg-dark: #4a4a4a;
    --input-text-dark: #f0f0f0;
    --input-border-dark: #666666;
    --button-bg-dark: #5a5a5a;
    --button-text-dark: #f0f0f0;
}

.json-editor-canvas {
    padding: 10px;
    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
    font-size: 14px;
}

.theme-light {
    background-color: var(--editor-bg-light);
    color: var(--editor-text-light);
}

.theme-dark {
    background-color: var(--editor-bg-dark);
    color: var(--editor-text-dark);
}

.json-node {
    padding: 8px;
    margin-top: 5px;
    border: 1px solid; /* Color will be set by theme */
    border-radius: 4px;
    display: flex;
    flex-direction: column; /* Stack children vertically */
    align-items: flex-start; /* Align items to the start */
}

.theme-light .json-node {
    border-color: var(--node-border-light);
    background-color: var(--node-bg-light);
}

.theme-dark .json-node {
    border-color: var(--node-border-dark);
    background-color: var(--node-bg-dark);
}

.node-row { /* For inline elements like key, value, type selector, delete button */
    display: flex;
    align-items: center;
    width: 100%; /* Make row take full width of node */
    margin-bottom: 4px; /* Space between rows if any */
}


.node-key-input {
    font-weight: bold;
    border: none;
    background: transparent;
    padding: 2px 5px;
    margin-right: 2px; /* Space before colon */
}
.theme-light .node-key-input { color: var(--key-color-light); }
.theme-dark .node-key-input { color: var(--key-color-dark); }

.node-key-separator {
    font-weight: bold;
    margin-right: 5px; /* Space after colon */
}
.theme-light .node-key-separator { color: var(--key-color-light); }
.theme-dark .node-key-separator { color: var(--key-color-dark); }


.node-value-string,
.node-value-number,
.node-value-boolean,
.node-value-null {
    padding: 2px 5px;
}

.theme-light .node-value-string { color: var(--string-color-light); }
.theme-dark .node-value-string { color: var(--string-color-dark); }

.theme-light .node-value-number { color: var(--number-color-light); }
.theme-dark .node-value-number { color: var(--number-color-dark); }

.theme-light .node-value-boolean { color: var(--boolean-color-light); }
.theme-dark .node-value-boolean { color: var(--boolean-color-dark); }

.theme-light .node-value-null { color: var(--null-color-light); font-style: italic; }
.theme-dark .node-value-null { color: var(--null-color-dark); }

.node-object-marker, .node-array-marker {
    font-weight: bold;
    padding: 2px 0;
}

.json-node input[type="text"],
.json-node input[type="number"],
.json-node select {
    margin-left: 5px;
    padding: 4px 6px; /* Increased padding */
    border-width: 1px;
    border-style: solid;
    border-radius: 3px;
    box-sizing: border-box; /* Ensure padding and border are included in the element's total width and height */
}

.theme-light .json-node input[type="text"],
.theme-light .json-node input[type="number"],
.theme-light .json-node select {
    background-color: var(--input-bg-light);
    color: var(--input-text-light);
    border-color: var(--input-border-light);
}

.theme-dark .json-node input[type="text"],
.theme-dark .json-node input[type="number"],
.theme-dark .json-node select {
    background-color: var(--input-bg-dark);
    color: var(--input-text-dark);
    border-color: var(--input-border-dark);
}


.node-type-selector {
    margin-left: 10px;
}

.delete-node-button, .add-button {
    margin-left: 10px;
    padding: 4px 8px; /* Consistent padding */
    border-width: 1px;
    border-style: solid;
    border-radius: 3px;
    cursor: pointer;
    font-weight: bold;
}

.theme-light .delete-node-button, .theme-light .add-button {
    background-color: var(--button-bg-light);
    color: var(--button-text-light);
    border-color: var(--input-border-light); /* Consistent border */
}
.theme-dark .delete-node-button, .theme-dark .add-button {
    background-color: var(--button-bg-dark);
    color: var(--button-text-dark);
    border-color: var(--input-border-dark); /* Consistent border */
}

.delete-node-button {
    color: red; /* Specific color for delete */
}
.theme-dark .delete-node-button {
    color: #ff6666; /* Lighter red for dark theme */
}

/* Styling for the children container to ensure proper indentation */
.node-children-container {
    /* margin-left will be set by inline style in NodeDisplay.razor for depth */
    padding-left: 0; /* Reset padding if any from parent */
    width: 100%; /* Ensure children container takes full width */
}

/* Add button specific styling if needed, e.g., for placement */
.json-editor-canvas > button { /* Theme toggle button */
    margin-bottom: 10px;
    padding: 6px 10px;
}

/* Ensure input fields inside nodes are not overly wide */
.json-node input[type="text"].node-value-string,
.json-node input[type="number"].node-value-number {
    min-width: 100px; /* Minimum width for value inputs */
    flex-grow: 1; /* Allow to grow if space is available */
}
.json-node input[type="text"].node-key-input {
     min-width: 100px; /* Increased from 80px for better readability */
     flex-grow: 0.5;
}

/* Adjustments for .node-row to manage spacing */
.node-row > *:not(:last-child) {
    margin-right: 5px; /* Add some space between elements in a row */
}

/* Specific for the outermost markers of objects and arrays */
.json-node > .node-object-marker,
.json-node > .node-array-marker {
    display: block; /* Make them take their own line */
    width: 100%; /* Full width */
}

/* Styles for JSON Output Section */
.json-output-section {
    margin-top: 20px;
    padding-top: 10px;
    border-top: 1px solid var(--node-border-light); /* Default to light theme border */
}
.theme-dark .json-output-section { /* Dark theme specific border */
    border-top-color: var(--node-border-dark);
}

.json-output-controls {
    margin-bottom: 10px;
}

.json-output-controls button.action-button {
    /* Inherits from .add-button, .delete-node-button if those are general enough,
       or define specific styles here. Assuming general button styling is already good. */
    margin-right: 10px; /* Space between buttons */
    padding: 6px 12px; /* Slightly smaller padding than main node buttons if desired */
    font-size: 0.9em; /* Slightly smaller font */
}

.theme-light .theme-aware-textarea {
    background-color: var(--input-bg-light);
    color: var(--input-text-light);
    border: 1px solid var(--input-border-light); /* Explicitly set border */
}
.theme-dark .theme-aware-textarea {
    background-color: var(--input-bg-dark);
    color: var(--input-text-dark);
    border: 1px solid var(--input-border-dark); /* Explicitly set border */
}

/* User feedback message styling */
.user-feedback {
    display: inline-block; /* Allow margin-left */
    margin-left: 10px;
    font-style: italic;
    font-size: 0.9em;
    padding: 2px 5px;
    border-radius: 3px;
}
.theme-light .user-feedback {
    color: var(--string-color-light); /* Green for success-like feedback */
    background-color: #e6ffed; /* Light green background */
}
.theme-dark .user-feedback {
    color: var(--string-color-dark);
    background-color: #3c5c42; /* Darker green background */
}

/* Style for json-input-section similar to json-output-section */
.json-input-section {
    margin-top: 20px;
    padding-top: 10px;
    border-top: 1px solid var(--node-border-light);
}
.theme-dark .json-input-section {
    border-top-color: var(--node-border-dark);
}
```
